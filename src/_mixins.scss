@import 'functions';

/*
** @desc Gera variações de cores
** @param
**  $prop: Propriedade do css que receberá a cor
**  $prefix: Classe que receberá as variações
** 
*/
@mixin make-colors($prop, $prefix, $posfix: '') {
  @each $color-name, $color in $colors {
    @each $color-variation, $value in $color {
      $rule: if($prop == 'border', 1px solid $value, $value);

      @if $color-variation =='base' {
        #{$prefix + $color-name + $posfix} {
          // !important necessário para sobreescrever cores pré definidas em elementos
          #{$prop}: $rule !important; // stylelint-disable-line declaration-no-important
        }
      }

      @else {
        $modif: str-split($color-variation, '-');
        $lum: str-slice(nth($modif, 1), 0, 1);
        $weight: nth($modif, 2);

        #{$prefix + $color-name + '--' + $lum + $weight + $posfix} {
          // !important necessário para sobreescrever cores pré definidas em elementos
          #{$prop}: $rule !important; // stylelint-disable-line declaration-no-important
        }
      }
    }
  }
}


/*
** @desc Gera variáveis de cores para serem utilizadas em arquivos Javascript
** @param
**  $base: Nome da cor base
**  $colors: Objeto de cores disponíveis no variables
** 
*/
@mixin generate-color-variables($base, $colors) {
  @each $key, $value in $colors {
    $class-name: convert-color-variable-to-camel-case($key, $base);
    #{unquote($class-name)}: $value;
  }
}

// Mixin para aplicar o tema escuro
@mixin dark-theme {
  body {
    background-color: $black;
    color: $white;
  }

  a {
    color: $link-color;
    &:hover {
      color: lighten($link-color, 10%);
    }
  }

  // Adicione mais regras conforme necessário
}