// Global
@import '../../variables';

// Local
@import 'variables';

.bth-switch {
	+ & {
		margin-left: 4px;
		padding-left: 4px;
	}

	&.bth-switch-inline {
		display: inline;
	}
	input {
		opacity: 0;
    	position: absolute;
		+ label {
			cursor: pointer;
			font-size: inherit;
			font-weight: normal;
			padding-left: 30px;
			position: relative;
			user-select: none;
			color: map-get($colors-gray, 'dark-30');

			&:before,
			&:after {
				content: '';
				position: absolute;
				cursor: pointer;
				top: 50%;
				transition: left .15s cubic-bezier(.4, 0, .2, 1),
							background .15s cubic-bezier(.4, 0, .2, 1),
							box-shadow .15s cubic-bezier(.4, 0, .2, 1);
			}

			&:before {
				box-shadow: inset -1px 1px 2px mix($black, transparent, 20%);
				background: mix($black, transparent, 26%);
				border-radius: $border-radius-large;
				display: block;
				height: 16px;
				left: 0;
				margin-top: -8px;
				width: 26px;
			}
			&:after {
				background: $gray-light-30;
				border-radius: 50%;
				box-shadow: 0 1px 5px mix($black, transparent, 20%);
				height: 12px;
				left: 2px;
				margin-top: -6px;
				width: 12px;
			}
		}
		&:hover:not(:disabled) {
			+ label {
				&:before {
					background-color: map-get($colors-gray, 'dark-5');
				}
			}
		}
		&:active:not(:disabled) {
			+ label {
				&:after {
					box-shadow: 0 0 0 20px mix($blue, transparent, 10%);
				}
			}
		}
		&:disabled {
			+ label {
				color: $gray;
      			cursor: not-allowed;

				&::before {
					cursor: not-allowed;
					opacity: .4;
				}

				&::after {
					cursor: not-allowed;
				}

				&:active::after {
					box-shadow: none;
				}
			}

		}
		&:checked {
			+ label {
				&:before {
					background: $blue;
				}

				&::after {
				  background: $white !important;
				  left: 12px;
				}
				
				&:active::after {
				  box-shadow: none;
				}
			}
			&:disabled {
				+ label {
					&::after {
						opacity: .7;
					}
				}
			}
			&:hover:not(:disabled) {
				+ label {
					&:before {
						background-color: map-get($colors-blue, 'dark-10');
					}
				}
			}
			&:active:not(:disabled) {
				+ label {
					&:after {
						box-shadow: 0 0 0 20px mix($blue, transparent, 10%);
					}
				}
			}
		}
	}
	
	&.bth-switch-warning {
		input {
			&:active:not(:disabled) {
				+ label {
					&:after {
						box-shadow: 0 0 0 20px mix($yellow, transparent, 10%);
					}
				}
			}
			&:checked {
				+ label {
					&:before {
						background-color: $yellow;
					}
				}
				&:hover:not(:disabled) {
					+ label {
						&:before {
							background-color: map-get($colors-yellow, 'dark-10');
						}
					}
				}
				&:active:not(:disabled) {
					+ label {
						&:after {
							box-shadow: 0 0 0 20px mix($yellow, transparent, 10%);
						}
					}
				}
			}
		}
	}
	&.bth-switch-danger {
		input {
			&:active:not(:disabled) {
				+ label {
					&:after {
						box-shadow: 0 0 0 20px mix($red, transparent, 10%);
					}
				}
			}
			&:checked {
				+ label {
					&:before {
						background-color: $red;
					}
				}
				&:hover:not(:disabled) {
					+ label {
						&:before {
							background-color: map-get($colors-red, 'dark-10');
						}
					}
				}
				&:active:not(:disabled) {
					+ label {
						&:after {
							box-shadow: 0 0 0 20px mix($red, transparent, 10%);
						}
					}
				}
			}
		}
	}
	&.right-switch {
		label {
			display: block;
			overflow: hidden;
			padding-left: 0;
			padding-right: 40px;
			text-overflow: ellipsis;
			white-space: nowrap;
			&:before {
				left: auto;
				right: 0;
			}
			&:after {
				left: auto;
				right: 12px;
				transition: right .15s cubic-bezier(.4, 0, .2, 1),
							background .15s cubic-bezier(.4, 0, .2, 1),
							box-shadow .15s cubic-bezier(.4, 0, .2, 1);
			}
		}
		
		input {
			&:checked {
				+ label {
					&:after {
						box-shadow: none;
						left: auto;
						right: 3px;
					}
				}
			}
			
			&:disabled,
			&:active {
				+ label {
					&:after {
						box-shadow: none !important;
					}
				}
			}
		}
	}
}